@require: stdjabook
@import: highlight
@import: lang/ocaml


document (|
  title = {Syntax Highlightのサンプル};
  author = {amaoto};
  show-title = true;
  show-toc = false;
|) '<
  +section{OCamlでの例} <
    +code?:(OCaml.rule)(
```
let foo = 1

let rec is_odd n =
  if n = 0 then false else is_even (n - 1)

and is_even n =
  if n = 0 then true else is_odd (n - 1)

let f x = let y = 1 in x + y

let decimal = -123_456_789

let octal = 0o123

let hexadecimal = 0xA0f1

let binary = 0b0011

"hello, world"
"hello, world\n"

module Option : sig
  type 'a t = None | Some of 'a
  val return : 'a -> 'a t
end = struct
  type 'a t =
    | None
    | Some of 'a

  let return x = Some x
end

(* Comment *)
let f = ( * )
let r = Option.return
```
    );
  >
>
